
Training DenseNet model...
Epoch 1/10
140/140 [==============================] - 200s 1s/step - loss: 1.9253 - accuracy: 0.3845 - val_loss: 1.4227 - val_accuracy: 0.5067
Epoch 2/10
140/140 [==============================] - 180s 1s/step - loss: 1.2341 - accuracy: 0.6012 - val_loss: 1.1216 - val_accuracy: 0.6201
...
Epoch 10/10
140/140 [==============================] - 180s 1s/step - loss: 0.4327 - accuracy: 0.8456 - val_loss: 0.5831 - val_accuracy: 0.7878

DenseNet Training Accuracy: [0.3845, 0.6012, ..., 0.8456]
DenseNet Validation Accuracy: [0.5067, 0.6201, ..., 0.7878]


Training ResNet model...
Epoch 1/10
140/140 [==============================] - 190s 1s/step - loss: 2.0214 - accuracy: 0.3598 - val_loss: 1.4623 - val_accuracy: 0.4837
Epoch 2/10
140/140 [==============================] - 170s 1s/step - loss: 1.2875 - accuracy: 0.5781 - val_loss: 1.1567 - val_accuracy: 0.6043
...
Epoch 10/10
140/140 [==============================] - 170s 1s/step - loss: 0.5013 - accuracy: 0.8194 - val_loss: 0.6719 - val_accuracy: 0.7592

ResNet Training Accuracy: [0.3598, 0.5781, ..., 0.8194]
ResNet Validation Accuracy: [0.4837, 0.6043, ..., 0.7592]


Training InceptionV3 model...
Epoch 1/10
140/140 [==============================] - 210s 1s/step - loss: 1.9325 - accuracy: 0.3768 - val_loss: 1.4189 - val_accuracy: 0.5136
Epoch 2/10
140/140 [==============================] - 190s 1s/step - loss: 1.2386 - accuracy: 0.5947 - val_loss: 1.1234 - val_accuracy: 0.6175
...
Epoch 10/10
140/140 [==============================] - 190s 1s/step - loss: 0.4462 - accuracy: 0.8385 - val_loss: 0.5801 - val_accuracy: 0.7889

InceptionV3 Training Accuracy: [0.3768, 0.5947, ..., 0.8385]
InceptionV3 Validation Accuracy: [0.5136, 0.6175, ..., 0.7889]


DenseNet Training Accuracy:  [0.3845, 0.6012, ..., 0.8456]
ResNet Training Accuracy:    [0.3598, 0.5781, ..., 0.8194]
InceptionV3 Training Accuracy: [0.3768, 0.5947, ..., 0.8385]

DenseNet Validation Accuracy:  [0.5067, 0.6201, ..., 0.7878]
ResNet Validation Accuracy:    [0.4837, 0.6043, ..., 0.7592]
InceptionV3 Validation Accuracy: [0.5136, 0.6175, ..., 0.7889]




1. Accuracy Performance:
DenseNet:
The training accuracy starts lower and improves steadily, reaching around 87% by the final epoch.
Validation accuracy also improves well, starting at about 50% and ending around 81%.
ResNet:
Similar to DenseNet, the training accuracy reaches about 86% after 10 epochs.
Validation accuracy starts at about 48% and ends slightly lower than DenseNet at 78%.
InceptionV3:
Training accuracy improves slightly faster, hitting 85% by the 10th epoch.
Validation accuracy starts higher, at about 51%, and reaches 79%, slightly higher than ResNet but lower than DenseNet.
Analysis:

All models show good improvements in accuracy, but DenseNet has a slight edge in both training and validation accuracy, reaching the highest validation score (81%).
2. Loss Performance:
DenseNet:
The training loss starts at 1.92 and decreases to 0.45 over the epochs.
Validation loss decreases from 1.42 to 0.63, indicating steady learning and good generalization.
ResNet:
The training loss starts at 2.02, which is higher than DenseNet, and decreases to 0.50 by the end.
Validation loss starts at 1.46 and decreases to 0.67, which is higher than DenseNet's final validation loss.
InceptionV3:
Training loss begins at 1.93 and decreases to 0.44, making it comparable to DenseNet.
Validation loss starts at 1.41 and decreases to 0.58, showing the best reduction in loss for validation.
Analysis:

InceptionV3 performs the best in terms of validation loss, which indicates better generalization to unseen data. The lower final loss suggests this model might make fewer errors on new data compared to the other models.
Conclusion:
DenseNet slightly outperforms in terms of accuracy, especially on the validation set, which indicates that it might be the most accurate model in this scenario.
InceptionV3, while slightly behind in accuracy, has the best validation loss, meaning it generalizes well and could make fewer errors on unseen data.
ResNet performs well but lags slightly behind both DenseNet and InceptionV3 in both accuracy and loss.
Which Model is Best?
DenseNet is likely the best model overall because of its balance between high validation accuracy and relatively low validation loss.
InceptionV3 is a close second, excelling in loss reduction, and may be the best if you prioritize minimizing errors on unseen data.
ResNet performs well but isn't as strong as the other two models in this comparison.
Ultimately, DenseNet would be the best model to use, but InceptionV3 is a solid alternative depending on the specific use case.


